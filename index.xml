<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>쿨에스엠에스 API References</title>
    <link>/</link>
    <description>Recent content on 쿨에스엠에스 API References</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>API</title>
      <link>/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/</guid>
      <description>RESTful API References 쿨에스엠에스의 REST API 레퍼런스입니다.</description>
    </item>
    
    <item>
      <title>API Credentials</title>
      <link>/apikeys/apikeys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/apikeys/apikeys/</guid>
      <description>API Key 관리 REST API 호출을 통해 API Key 생성, 삭제, Secret Key 재생성 등 관리 할 수 있습니다.
API Key 생성 Resource URL POST https://solapi.com/credentials/createCredential
Request Parameters 필수 입력 파라메터가 없습니다.
 Request Syntax
 {}   Request Sample
 curl &amp;quot;https://solapi.com/credentials/createCredential&amp;quot; -H &amp;quot;Authorization: USER user_id=example, date=2017-08-01 11:01:07, salt=salt=597fe0e36daeb, signature=fd96c1931e947aef14c963b67763c913&amp;quot;  request( &amp;quot;https://solapi.com/credentials/createCredential&amp;quot;, headers: { &amp;quot;Authorization: USER user_id=example, date=2017-08-01 11:01:07, salt=salt=597fe0e36daeb, signature=fd96c1931e947aef14c963b67763c913&amp;quot; } )  import urllib.request url = &amp;#39;https://solapi.</description>
    </item>
    
    <item>
      <title>API Reference</title>
      <link>/message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/message/</guid>
      <description>문자발송 쿨에스엠에스의 REST API Reference 내용을 담고 있습니다.
참고
REST는 Representational State Transfer의 약자로 API 연동 규격을 명확하게 정의되고 쉽게 구현 할 수 있습니다. https://ko.wikipedia.org/wiki/REST
쿨에스엠에스 SMS REST API 서버로 Request를 보내기 위해서 인증을 거쳐야 합니다. authentication 를 참고하세요.
Resource URL 구성 https://solapi.com/&amp;lt;ServiceName&amp;gt;/&amp;lt;Version&amp;gt;/[&amp;lt;ResourcePath&amp;gt;]/&amp;lt;Action&amp;gt;
ServiceName
- SimpleMessage/sendMessages - GroupMessage/index - ScheduledMessage/index - MessageLog/index
Version
- 서비스 버전
ResourcePath
- 필요시 특정 리소스 경로를 나타냅니다
Action
- 서비스 혹은 리소스의 액션을 나타냅니다</description>
    </item>
    
    <item>
      <title>잔액정보 가져오기</title>
      <link>/cash-api/balance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cash-api/balance/</guid>
      <description>잔액정보 이 API는 Authentication Info를 제외한 Parameters가 필요 없습니다.
유저의 잔액정보를 가져옵니다.
Request Parameters 필수 입력 파라메터가 없습니다.
Response Parameters { &amp;quot;data&amp;quot;: { &amp;quot;member_srl&amp;quot;: &amp;quot;382492&amp;quot;, &amp;quot;user_id&amp;quot;: &amp;quot;testsy1&amp;quot;, &amp;quot;cash&amp;quot;: &amp;quot;0&amp;quot;, &amp;quot;point&amp;quot;: &amp;quot;98843&amp;quot;, } }     Parameter Default Description     member_srl - 사용자 번호(AccountId와 동일)   user_id - 사용자 아이디   cash - 남은 캐쉬   point - 남은 포인트    Error 처리 { &amp;quot;errorMessage&amp;quot;: &amp;quot;parameter is empty&amp;quot; }  Http Status Code가 200일 경우 성공 아니라면 &amp;lsquo;errorMessage&amp;rsquo;값을 확인한다.</description>
    </item>
    
  </channel>
</rss>